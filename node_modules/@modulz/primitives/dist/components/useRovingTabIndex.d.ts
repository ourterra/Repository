import React from 'react';
declare type UseRovingTabIndexOptions<T> = {
    id: string;
    isSelected: boolean;
    elementRef: React.RefObject<T>;
    onFocus?: React.FocusEventHandler<T>;
    onKeyDown?: React.KeyboardEventHandler<T>;
};
export declare function useRovingTabIndex<T extends HTMLElement>({ id, isSelected, elementRef, onFocus: originalOnFocus, onKeyDown: originalOnKeyDown, }: UseRovingTabIndexOptions<T>): {
    onFocus: (event: React.FocusEvent<T>) => void;
    onKeyDown: (event: React.KeyboardEvent<T>) => void;
    tabIndex: number;
};
declare type RovingTabIndexProviderProps = {
    children: React.ReactNode;
    orientation: React.AriaAttributes['aria-orientation'];
    shouldLoop?: boolean;
};
export declare function RovingTabIndexProvider({ children, orientation, shouldLoop }: RovingTabIndexProviderProps): JSX.Element;
export {};
