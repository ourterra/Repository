declare type UseControlledStateParams<T> = {
    prop?: T;
    defaultProp?: T;
    onChange?: (state?: T) => void;
    /**
     * Extra override if checking `prop !== undefined` is not enough
     * for example a Select accepts an `undefined` value
     */
    unstable__isControlled?: boolean;
};
export declare function useControlledState<T>({ prop, defaultProp, onChange, unstable__isControlled, }: UseControlledStateParams<T>): readonly [T | undefined, (state?: T | undefined) => void, () => void];
export {};
