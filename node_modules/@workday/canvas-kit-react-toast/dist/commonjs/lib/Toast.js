"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var canvas_kit_react_popup_1 = __importStar(require("@workday/canvas-kit-react-popup"));
var canvas_kit_react_core_1 = require("@workday/canvas-kit-react-core");
var canvas_kit_react_icon_1 = require("@workday/canvas-kit-react-icon");
var canvas_system_icons_web_1 = require("@workday/canvas-system-icons-web");
var styled_1 = __importDefault(require("@emotion/styled"));
var toastWidth = 360;
var ToastContentContainer = styled_1.default('div')(__assign({ display: 'flex', alignItems: 'center' }, canvas_kit_react_core_1.type.body2), function (_a) {
    var onClose = _a.onClose;
    return ({
        marginRight: onClose ? canvas_kit_react_core_1.spacing.m : undefined,
    });
});
var ToastSystemIcon = styled_1.default(canvas_kit_react_icon_1.SystemIcon)({
    marginRight: canvas_kit_react_core_1.spacing.s,
    alignSelf: 'start',
});
var ActionButton = styled_1.default('button')(__assign(__assign(__assign({}, canvas_kit_react_core_1.type.body2), canvas_kit_react_core_1.type.variant.link), { display: 'block', backgroundColor: 'transparent', border: 'none', marginTop: canvas_kit_react_core_1.spacing.xxxs }));
var Message = styled_1.default('div')({
    wordBreak: 'break-word',
    wordWrap: 'break-word',
});
var Toast = (function (_super) {
    __extends(Toast, _super);
    function Toast() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Toast.prototype.render = function () {
        var _a = this.props, _b = _a.icon, icon = _b === void 0 ? canvas_system_icons_web_1.checkIcon : _b, _c = _a.iconColor, iconColor = _c === void 0 ? canvas_kit_react_core_1.colors.greenApple400 : _c, transformOrigin = _a.transformOrigin, onClose = _a.onClose, onActionClick = _a.onActionClick, actionText = _a.actionText, elemProps = __rest(_a, ["icon", "iconColor", "transformOrigin", "onClose", "onActionClick", "actionText"]);
        var isInteractive = onClose || onActionClick;
        return (React.createElement(canvas_kit_react_popup_1.default, __assign({ width: toastWidth, transformOrigin: transformOrigin, padding: canvas_kit_react_popup_1.PopupPadding.s, handleClose: onClose, closeIconSize: "small", role: isInteractive ? 'dialog' : 'status', "aria-live": isInteractive ? 'off' : 'polite', "aria-atomic": !isInteractive }, elemProps),
            React.createElement(ToastContentContainer, { onClose: onClose },
                icon && React.createElement(ToastSystemIcon, { color: iconColor, colorHover: iconColor, icon: icon }),
                React.createElement(Message, null,
                    this.props.children,
                    onActionClick && React.createElement(ActionButton, { onClick: onActionClick }, actionText)))));
    };
    return Toast;
}(React.Component));
exports.default = Toast;
