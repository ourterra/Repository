var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import styled from '@emotion/styled';
import { colors, commonColors, spacing } from '@workday/canvas-kit-react-core';
var ActionBarContainer = styled('div')({
    borderTop: "solid 1px " + colors.soap400,
    background: commonColors.background,
    padding: spacing.s,
    boxShadow: '0 -2px 4px rgba(0, 0, 0, 0.08)',
    '@media (max-width: 575px)': {
        padding: spacing.xxs,
    },
}, function (_a) {
    var fixed = _a.fixed;
    return fixed && {
        position: 'fixed',
        left: 0,
        bottom: 0,
        right: 0,
    };
});
var ChildrenContainer = styled('div')({
    display: 'inline-block',
    padding: "0 " + spacing.m,
    '*:not(:first-of-type)': {
        marginLeft: spacing.s,
    },
    '@media (max-width: 575px)': {
        display: 'flex',
        padding: spacing.xxs,
        justifyContent: 'center',
        flexDirection: 'row-reverse',
        '> *': {
            flex: 1,
            '&:not(:first-of-type)': {
                marginRight: spacing.s,
                marginLeft: 0,
            },
        },
    },
});
var ActionBar = (function (_super) {
    __extends(ActionBar, _super);
    function ActionBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ActionBar.prototype.render = function () {
        var _a = this.props, fixed = _a.fixed, children = _a.children, elemProps = __rest(_a, ["fixed", "children"]);
        return (React.createElement(ActionBarContainer, __assign({}, elemProps, { fixed: fixed }),
            React.createElement(ChildrenContainer, null, children)));
    };
    return ActionBar;
}(React.Component));
export default ActionBar;
