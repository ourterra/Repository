var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { css, jsx } from '@emotion/core';
import * as React from 'react';
import styled from '@emotion/styled';
import { colors, commonColors, type, spacing } from '@workday/canvas-kit-react-core';
import Button from '@workday/canvas-kit-react-button';
var Banner = styled('div')(type.body2, {
    backgroundColor: commonColors.background,
    borderTop: "1px solid " + colors.soap400,
    display: 'flex',
    padding: spacing.m,
    alignItems: 'center',
    justifyContent: 'space-between',
    position: 'fixed',
    bottom: 0,
    left: 0,
    right: 0,
    zIndex: 99,
    transition: 'transform 0.2s ease-out',
    '@media (max-width: 450px)': {
        flexDirection: 'column',
        alignItems: 'stretch',
        textAlign: 'center',
        padding: spacing.s + " 0",
    },
}, function (_a) {
    var isClosed = _a.isClosed;
    return isClosed ? { transform: 'translateY(100%)' } : null;
});
var BannerItem = styled('div')({
    marginLeft: spacing.s,
    marginRight: spacing.s,
    '@media (max-width: 450px)': {
        '&:not(:first-of-type)': {
            marginTop: spacing.s,
        },
    },
});
var rowStyle = css({
    display: 'flex',
});
var CookieSettings = styled('button')(type.body2, type.link, {
    marginRight: spacing.s,
    border: 0,
    fontWeight: 500,
    whiteSpace: 'nowrap',
    cursor: 'pointer',
    padding: 0,
    height: '0%',
    alignSelf: 'center',
});
var CookieBanner = (function (_super) {
    __extends(CookieBanner, _super);
    function CookieBanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CookieBanner.prototype.render = function () {
        var _a = this.props, _b = _a.notice, notice = _b === void 0 ? CookieBanner.DefaultNotice : _b, _c = _a.settingsLabel, settingsLabel = _c === void 0 ? 'Cookie Settings' : _c, isClosed = _a.isClosed, onAccept = _a.onAccept, onClickSettings = _a.onClickSettings, elemProps = __rest(_a, ["notice", "settingsLabel", "isClosed", "onAccept", "onClickSettings"]);
        return (jsx(Banner, __assign({ isClosed: isClosed }, elemProps),
            jsx(BannerItem, null, notice),
            jsx(BannerItem, { css: rowStyle },
                onClickSettings && (jsx(CookieSettings, { onClick: onClickSettings }, settingsLabel)),
                jsx(Button, { onClick: onAccept, variant: Button.Variant.Primary, grow: true }, "Continue"))));
    };
    CookieBanner.DefaultNotice = 'We use cookies to ensure that we give you the best experience on our website. If you continue without changing your settings, weâ€™ll assume that you are willing to receive cookies.';
    return CookieBanner;
}(React.Component));
export default CookieBanner;
