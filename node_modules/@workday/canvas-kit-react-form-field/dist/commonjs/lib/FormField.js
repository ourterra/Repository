"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var canvas_kit_react_core_1 = require("@workday/canvas-kit-react-core");
var canvas_kit_react_common_1 = require("@workday/canvas-kit-react-common");
var Hint_1 = __importDefault(require("./Hint"));
var Label_1 = __importDefault(require("./Label"));
var types_1 = require("./types");
var v4_1 = __importDefault(require("uuid/v4"));
var FormFieldFieldsetContainer = canvas_kit_react_common_1.styled('fieldset')({
    padding: 0,
    margin: 0,
    border: 0,
});
var FormFieldContainer = canvas_kit_react_common_1.styled('div')(function (_a) {
    var labelPosition = _a.labelPosition;
    if (labelPosition === types_1.FormFieldLabelPosition.Left) {
        return {
            display: 'flex',
            marginBottom: canvas_kit_react_core_1.spacing.m,
        };
    }
    return {
        display: 'block',
        marginBottom: canvas_kit_react_core_1.spacing.m,
    };
});
var FormFieldInputContainer = canvas_kit_react_common_1.styled('div')(function (_a) {
    var grow = _a.grow, labelPosition = _a.labelPosition;
    if (grow) {
        if (labelPosition === types_1.FormFieldLabelPosition.Left ||
            labelPosition === types_1.FormFieldLabelPosition.Hidden) {
            return {
                flexGrow: 1,
            };
        }
        return {
            display: 'block',
        };
    }
    if (labelPosition === types_1.FormFieldLabelPosition.Left) {
        return {
            display: 'inline-flex',
            alignItems: 'center',
            flexWrap: 'wrap',
        };
    }
    return {
        display: 'inline-block',
    };
});
var FormField = (function (_super) {
    __extends(FormField, _super);
    function FormField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inputId = _this.props.inputId || v4_1.default();
        _this.renderChildren = function (child) {
            if (React.isValidElement(child)) {
                var props = __assign({}, child.props);
                if (_this.props.grow) {
                    props.grow = _this.props.grow;
                }
                if (typeof _this.props.error !== 'undefined') {
                    props.error = _this.props.error;
                    if (_this.props.hintId) {
                        props['aria-describedby'] = _this.props.hintId;
                    }
                    if (_this.props.error === canvas_kit_react_common_1.ErrorType.Error) {
                        props['aria-invalid'] = true;
                    }
                }
                props.id = _this.inputId;
                return React.cloneElement(child, props);
            }
            return child;
        };
        return _this;
    }
    FormField.prototype.render = function () {
        var _a = this.props, _b = _a.errorLabel, errorLabel = _b === void 0 ? 'Error' : _b, _c = _a.alertLabel, alertLabel = _c === void 0 ? 'Alert' : _c, _d = _a.useFieldset, useFieldset = _d === void 0 ? false : _d, _e = _a.labelPosition, labelPosition = _e === void 0 ? FormField.LabelPosition.Top : _e, label = _a.label, hintText = _a.hintText, hintId = _a.hintId, inputId = _a.inputId, grow = _a.grow, children = _a.children, error = _a.error, required = _a.required, elemProps = __rest(_a, ["errorLabel", "alertLabel", "useFieldset", "labelPosition", "label", "hintText", "hintId", "inputId", "grow", "children", "error", "required"]);
        var field = (React.createElement(FormFieldContainer, __assign({ labelPosition: labelPosition }, elemProps),
            typeof label === 'string' ? (React.createElement(Label_1.default, { labelPosition: labelPosition, htmlFor: this.inputId, isLegend: useFieldset, required: required, accessibleHide: labelPosition === types_1.FormFieldLabelPosition.Hidden }, label)) : (label),
            React.createElement(FormFieldInputContainer, { grow: grow, labelPosition: labelPosition },
                React.Children.map(children, this.renderChildren),
                hintText && (React.createElement(Hint_1.default, { errorLabel: errorLabel, alertLabel: alertLabel, error: error, id: hintId }, hintText)))));
        return useFieldset ? React.createElement(FormFieldFieldsetContainer, null, field) : field;
    };
    FormField.LabelPosition = types_1.FormFieldLabelPosition;
    FormField.ErrorType = canvas_kit_react_common_1.ErrorType;
    return FormField;
}(React.Component));
exports.default = FormField;
