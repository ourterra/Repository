"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var canvas_kit_react_common_1 = require("@workday/canvas-kit-react-common");
var canvas_kit_react_core_1 = require("@workday/canvas-kit-react-core");
var circleSize = canvas_kit_react_core_1.spacing.xs;
var switchWidth = canvas_kit_react_core_1.spacing.l;
var switchHeight = canvas_kit_react_core_1.spacing.s;
var switchTapArea = canvas_kit_react_core_1.spacing.l;
var translateLength = canvas_kit_react_core_1.spacing.s;
var SwitchContainer = canvas_kit_react_common_1.styled('div')({
    position: 'relative',
    height: canvas_kit_react_core_1.spacing.m,
    width: switchTapArea,
});
var SwitchInput = canvas_kit_react_common_1.styled('input')({
    position: 'absolute',
    height: canvas_kit_react_core_1.spacing.m,
    width: switchTapArea,
    margin: 0,
    marginLeft: canvas_kit_react_core_1.spacing.xxxs,
    borderRadius: canvas_kit_react_core_1.borderRadius.circle,
    opacity: 0,
    display: 'block',
}, function (_a) {
    var disabled = _a.disabled;
    return ({
        cursor: disabled ? 'not-allowed' : 'pointer',
    });
}, function (_a) {
    var error = _a.error, theme = _a.theme;
    var errorColors = canvas_kit_react_common_1.getErrorColors(error, theme);
    if (errorColors.outer === errorColors.inner) {
        errorColors.outer = 'transparent';
    }
    var styles = {
        '&:focus': {
            outline: 'none',
            '& ~ div:first-of-type': __assign({}, canvas_kit_react_common_1.focusRing({ separation: 2, animate: false }, theme)),
        },
        '& ~ div:first-of-type': {
            boxShadow: "\n          0 0 0 2px " + canvas_kit_react_core_1.colors.frenchVanilla100 + ",\n          0 0 0 4px " + errorColors.inner + ",\n          0 0 0 5px " + errorColors.outer,
        },
        '&:focus ~ div:first-of-type': __assign({}, canvas_kit_react_common_1.focusRing({ separation: 2, animate: false }, theme)),
    };
    return __assign(__assign({}, styles), canvas_kit_react_common_1.mouseFocusBehavior(__assign(__assign({}, styles), { '&:focus ~ div:first-of-type, &:active ~ div:first-of-type': {
            boxShadow: "\n            0 0 0 2px " + canvas_kit_react_core_1.colors.frenchVanilla100 + ",\n            0 0 0 4px " + errorColors.inner + ",\n            0 0 0 5px " + errorColors.outer,
        } })));
});
var SwitchBackground = canvas_kit_react_common_1.styled('div')({
    boxSizing: 'border-box',
    position: 'absolute',
    display: 'flex',
    alignItems: 'center',
    pointerEvents: 'none',
    marginTop: canvas_kit_react_core_1.spacing.xxxs,
    width: switchWidth,
    height: switchHeight,
    borderRadius: canvas_kit_react_core_1.borderRadius.circle,
    padding: '0px 2px',
    transition: 'background-color 200ms ease',
}, function (_a) {
    var checked = _a.checked, disabled = _a.disabled, themePrimary = _a.theme.canvas.palette.primary;
    if (checked) {
        return {
            backgroundColor: disabled ? themePrimary.light : themePrimary.main,
        };
    }
    else {
        return {
            backgroundColor: disabled ? canvas_kit_react_core_1.colors.soap400 : canvas_kit_react_core_1.colors.licorice200,
        };
    }
});
var SwitchCircle = canvas_kit_react_common_1.styled('div')(__assign(__assign({ width: circleSize, height: circleSize, borderRadius: canvas_kit_react_core_1.borderRadius.circle }, canvas_kit_react_core_1.depth[1]), { transition: 'transform 150ms ease', pointerEvents: 'none' }), function (_a) {
    var theme = _a.theme;
    return ({
        backgroundColor: theme.canvas.palette.primary.contrast,
    });
}, function (_a) {
    var checked = _a.checked;
    return ({
        transform: checked ? "translateX(" + translateLength + ")" : 'translateX(0)',
    });
});
exports.Switch = function (_a) {
    var _b = _a.checked, checked = _b === void 0 ? false : _b, id = _a.id, _c = _a.disabled, disabled = _c === void 0 ? false : _c, inputRef = _a.inputRef, onChange = _a.onChange, value = _a.value, elemProps = __rest(_a, ["checked", "id", "disabled", "inputRef", "onChange", "value"]);
    var inputId = canvas_kit_react_common_1.useUniqueId(id);
    return (React.createElement(SwitchContainer, null,
        React.createElement(SwitchInput, __assign({ checked: checked, disabled: disabled, id: inputId, ref: inputRef, onChange: onChange, role: "checkbox", tabIndex: 0, type: "checkbox", value: value }, elemProps)),
        React.createElement(SwitchBackground, { checked: checked, disabled: disabled },
            React.createElement(SwitchCircle, { checked: checked }))));
};
exports.Switch.ErrorType = canvas_kit_react_common_1.ErrorType;
exports.default = exports.Switch;
